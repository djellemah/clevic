#! /usr/bin/ruby

require 'ui/browser_ui.rb'
require 'clevic/entry_table_view.rb'
require 'clevic/browser.rb'
require 'active_record'
require 'active_record/dirty.rb'

# fetch command line options
require 'optparse'

$options = {}
oparser = OptionParser.new
oparser.on( '-h', '--host HOST', 'RDBMS host', String ) { |o| $options[:host] = o }
oparser.on( '-u', '--user USERNAME', String ) { |o| $options[:user] = o }
oparser.on( '-p', '--pass PASSWORD', String ) { |o| $options[:password] = o }
oparser.on( '-t', '--table TABLE', 'Table to display', String ) { |o| $options[:table] = o }
oparser.on( '-d', '--database DATABASE', 'Database name', String ) { |o| $options[:database] = o }
oparser.on( '-D', '-v', '--debug' ) { |o| $options[:debug] = true }
oparser.on( '-h', '-?', '--help' ) do |o|
  puts oparser.to_s
  exit( 0 )
end

args = oparser.parse( ARGV )

if args.size > 0
  $options[:definition] = args.shift
  require "#{$options[:definition]}_models.rb"
end

app = Qt::Application.new( args )

if $options[:debug]
  puts $options
  puts args.inspect
end

# connect to the database
if !$options.has_key?( :database )
  raise "Please define $options[:database]"
end

require 'clevic/db_options.rb'

puts "using database #{ActiveRecord::Base.connection.raw_connection.db}" if $options[:debug]

# show UI
main_window = Qt::MainWindow.new
browser = Browser.new( main_window )
browser.open
main_window.show
app.exec
