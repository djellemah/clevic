#! /usr/bin/ruby

require 'Qt4'
require 'entry_table_model.rb'
require 'delegates.rb'
require 'entry_table_view.rb'

# require AR
require 'rubygems'
require 'active_record'
require 'active_record/dirty.rb'

# connect to the database
ActiveRecord::Base.establish_connection({
  :adapter  => 'postgresql',
  :database => 'timestest',
  :username => 'panic',
  :password => ''
})

class Entry < ActiveRecord::Base
  include ActiveRecord::Dirty
  belongs_to :invoice
  belongs_to :activity
  belongs_to :project
end

class Project < ActiveRecord::Base
  has_many :entries
end

class Activity < ActiveRecord::Base
  has_many :entries
end

class Invoice < ActiveRecord::Base
  has_many :entries
end

app = Qt::Application.new( ARGV )

table = EntryTableView.new( Entry ).create_model do |t|
  t.plain :date, :sample => '28-Dec-08'
  t.relational :invoice, 'invoice_number', :sample => 'WWW000', :conditions => "status = 'not sent'", :order => 'invoice_number'
  t.relational :project, 'project', :sample => 'Some Project', :conditions => 'active = true', :order => 'lower(project)'
  t.plain :start, :sample => '00:00'
  t.plain :end, :sample => '00:00'
  t.plain :description, :sample => 'This is a long string designed to hold lots of data and description'
  t.relational :activity, 'activity', :order => 'lower(activity)', :sample => 'Troubleshooting'
  t.distinct :module, :sample => 'Doing Stuff'
  t.plain :charge, :sample => 'Charge'
  t.distinct :person, :sample => 'Leilani'
  
  t.collection = Entry.find( :all, :order => 'date, start, id' )
end

table.showMaximized
#~ table.show

begin
  app.exec
rescue Exception => e
  puts e.backtrace.join( "\n" )
  puts e.message
end
